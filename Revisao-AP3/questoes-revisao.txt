Claro! Aqui estão cinco questões que seguem a mesma estrutura e complexidade do sistema de gerenciamento de coleção de veículos que você descreveu:

### Questão 1: Sistema de Gerenciamento de Biblioteca

Desenvolva um sistema para gerenciar uma biblioteca utilizando coleções do Java para armazenar os dados. O sistema será composto por três entidades principais: Livro, Bibliotecário, e Seção da Biblioteca. Abaixo estão os detalhes de cada classe, seus atributos e como as interações entre as classes deverão ocorrer.

- **Livros**: Um livro possui informações como título, autor, ano de publicação e categorias (por exemplo, ficção, não-ficção, mistério). Cada livro pode pertencer a uma ou mais dessas categorias, e essas informações devem ser devidamente cadastradas e mantidas.

- **Bibliotecários**: Cada bibliotecário gerencia uma seção da biblioteca e pode adicionar ou remover livros dessa seção. O bibliotecário também pode realizar buscas por livros e organizar eventos de leitura.

- **Seções da Biblioteca**: As seções da biblioteca são divididas por categorias de livros (por exemplo, Literatura, Ciência, História). Cada seção tem um bibliotecário responsável e armazena livros de categorias específicas.

**Funcionalidades do Sistema:**
1. Cadastro de Livro: Permitir o cadastro de novos livros com título, autor, ano de publicação e categorias.
2. Cadastro de Bibliotecário: Permitir o cadastro de novos bibliotecários com seus respectivos nomes e seções.
3. Cadastro de Seção da Biblioteca: Permitir o cadastro de novas seções da biblioteca, com o nome da seção e categorias de livros.
4. Adicionar Livro à Seção: Permitir que um bibliotecário adicione um livro à sua seção.
5. Remover Livro da Seção: Permitir que um bibliotecário remova um livro de sua seção.
6. Organização de Eventos de Leitura: Permitir que um bibliotecário organize eventos de leitura.
7. Consultas:
   - Listar todos os livros de uma determinada categoria.
   - Listar todos os bibliotecários responsáveis por uma determinada seção.
   - Listar todas as seções da biblioteca que contêm livros de uma determinada categoria.

### Questão 2: Sistema de Gerenciamento de Projetos

Desenvolva um sistema para gerenciar projetos de uma empresa utilizando coleções do Java para armazenar os dados. O sistema será composto por três entidades principais: Projeto, Funcionário, e Departamento. Abaixo estão os detalhes de cada classe, seus atributos e como as interações entre as classes deverão ocorrer.

- **Projetos**: Um projeto possui informações como nome, data de início, data de término e status. Cada projeto pode pertencer a um ou mais departamentos.

- **Funcionários**: Cada funcionário trabalha em um departamento e pode ser alocado em um ou mais projetos. Os funcionários podem ter diferentes papéis e responsabilidades nos projetos.

- **Departamentos**: Os departamentos são responsáveis por diferentes áreas da empresa e podem ter vários projetos em andamento. Cada departamento tem um gerente.

**Funcionalidades do Sistema:**
1. Cadastro de Projeto: Permitir o cadastro de novos projetos com nome, data de início, data de término e status.
2. Cadastro de Funcionário: Permitir o cadastro de novos funcionários com nome, papel e departamento.
3. Cadastro de Departamento: Permitir o cadastro de novos departamentos com o nome e gerente responsável.
4. Alocar Funcionário em Projeto: Permitir que um funcionário seja alocado a um projeto.
5. Remover Funcionário de Projeto: Permitir que um funcionário seja removido de um projeto.
6. Atualização de Status de Projeto: Permitir que o status de um projeto seja atualizado.
7. Consultas:
   - Listar todos os projetos em um departamento específico.
   - Listar todos os funcionários alocados em um projeto específico.
   - Listar todos os projetos com um determinado status.

### Questão 3: Sistema de Gerenciamento de Restaurante

Desenvolva um sistema para gerenciar um restaurante utilizando coleções do Java para armazenar os dados. O sistema será composto por três entidades principais: Prato, Garçom, e Mesa. Abaixo estão os detalhes de cada classe, seus atributos e como as interações entre as classes deverão ocorrer.

- **Pratos**: Um prato possui informações como nome, preço e categoria (por exemplo, entrada, prato principal, sobremesa). Cada prato pode ter uma descrição e ser parte de um menu específico.

- **Garçons**: Cada garçom serve em uma ou mais mesas e pode anotar pedidos de pratos para os clientes. Os garçons devem ser capazes de atualizar o status dos pedidos.

- **Mesas**: As mesas são divididas por número e podem estar ocupadas ou livres. Cada mesa pode ter um garçom responsável.

**Funcionalidades do Sistema:**
1. Cadastro de Prato: Permitir o cadastro de novos pratos com nome, preço e categoria.
2. Cadastro de Garçom: Permitir o cadastro de novos garçons com nome e mesas atribuídas.
3. Cadastro de Mesa: Permitir o cadastro de novas mesas com número e status.
4. Adicionar Pedido: Permitir que um garçom adicione um pedido de prato para uma mesa.
5. Atualizar Status do Pedido: Permitir que o status de um pedido seja atualizado.
6. Gerenciar Disponibilidade de Mesas: Permitir que mesas sejam marcadas como ocupadas ou livres.
7. Consultas:
   - Listar todos os pratos em um menu específico.
   - Listar todos os garçons atribuídos a uma mesa específica.
   - Listar todas as mesas ocupadas.

### Questão 4: Sistema de Gerenciamento de Inventário

Desenvolva um sistema para gerenciar o inventário de uma loja utilizando coleções do Java para armazenar os dados. O sistema será composto por três entidades principais: Produto, Fornecedor, e Categoria. Abaixo estão os detalhes de cada classe, seus atributos e como as interações entre as classes deverão ocorrer.

- **Produtos**: Um produto possui informações como nome, preço, quantidade em estoque e categoria. Cada produto pode ter um código único e ser fornecido por um ou mais fornecedores.

- **Fornecedores**: Cada fornecedor fornece um ou mais produtos e pode ter informações de contato.

- **Categorias**: Os produtos são categorizados em diferentes tipos, e cada categoria pode ter uma descrição e uma lista de produtos associados.

**Funcionalidades do Sistema:**
1. Cadastro de Produto: Permitir o cadastro de novos produtos com nome, preço, quantidade em estoque e categoria.
2. Cadastro de Fornecedor: Permitir o cadastro de novos fornecedores com informações de contato.
3. Cadastro de Categoria: Permitir o cadastro de novas categorias com nome e descrição.
4. Adicionar Produto ao Estoque: Permitir que a quantidade de um produto em estoque seja atualizada.
5. Remover Produto do Estoque: Permitir que um produto seja removido do estoque.
6. Consultar Fornecedores: Permitir a consulta dos fornecedores de um produto específico.
7. Consultas:
   - Listar todos os produtos em uma categoria específica.
   - Listar todos os produtos fornecidos por um fornecedor específico.
   - Listar todos os fornecedores para um produto específico.

### Questão 5: Sistema de Gerenciamento de Cursos

Desenvolva um sistema para gerenciar cursos em uma instituição de ensino utilizando coleções do Java para armazenar os dados. O sistema será composto por três entidades principais: Curso, Professor, e Aluno. Abaixo estão os detalhes de cada classe, seus atributos e como as interações entre as classes deverão ocorrer.

- **Cursos**: Um curso possui informações como nome, código, número de créditos e carga horária. Cada curso pode ter um ou mais professores responsáveis e uma lista de alunos matriculados.

- **Professores**: Cada professor ensina um ou mais cursos e pode ter informações como nome e especialização.

- **Alunos**: Cada aluno está matriculado em um ou mais cursos e pode ter informações como nome, matrícula e histórico acadêmico.

**Funcionalidades do Sistema:**
1. Cadastro de Curso: Permitir o cadastro de novos cursos com nome, código, número de créditos e carga horária.
2. Cadastro de Professor: Permitir o cadastro de novos professores com nome e especialização.
3. Cadastro de Aluno: Permitir o cadastro de novos alunos com nome, matrícula e histórico acadêmico.
4. Matricular Aluno em Curso: Permitir que um aluno seja matriculado em um curso.
5. Remover Aluno de Curso: Permitir que um aluno seja removido de um curso.
6. Atribuir Professor a Curso: Permitir que um professor seja atribuído a um curso.
7. Consultas:
   - Listar todos os cursos oferecidos por um professor específico.
   - Listar todos os alunos matriculados em um curso específico.
   - Listar todos os cursos em que um aluno está matriculado.

Essas questões cobrem uma variedade de sistemas e funcionalidades, permitindo que você pratique e refine suas habilidades de design e implementação de sistemas orientados a objetos. Se precisar de mais detalhes ou tiver outras perguntas, estou à disposição para ajudar!
